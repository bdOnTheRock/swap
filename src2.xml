=SI(C10=0;G9;$D$1*(C10-$C$2)+$M$1)	=SI($F10>$B10;$F10;$B10)	=SI($A10<$A9;$B10;I9)	10	=SI(A11<A10;0;A10)	=SI(B10<B9;1;SI(B10>B9;-1;L9))			=C10/B10	=G11-H11
	


 Global source As String
Sub borne()
refreshDyn
Borne_ ("c")
Borne_ ("d")
End Sub



Sub Borne_(ByVal src As String)
'
' borne Macro
'
' Touche de raccourci du clavier: Ctrl+b
'




source = "_" & src
courant = Sheets(source).Cells(1, 12).Value
Dim last As Integer
last = courant

Dim i As Integer

For i = courant To 10000

 If Sheets(source).Cells(i, 1) <= 0 Then
 Exit For

 End If
  last = i
Next

Sheets(source).Cells(1, 13).Value = Sheets(source).Cells(last, 2)

borneP10 = 10 * Int(last / 10)
If borneP10 < last Then borneP10 = borneP10 + 10

borneP20 = 20 * Int(last / 20)
If borneP20 < last Then borneP20 = borneP20 + 20

borneP50 = 50 * Int(last / 50)
If borneP50 < last Then borneP50 = borneP50 + 50

borneP100 = 100 * Int(last / 100)
If borneP100 < last Then borneP100 = borneP100 + 100

borneMV = borneP10 - 60
borneMC = borneP10 - 110
borneMCV = borneP10 - 160
borneM5C = borneP50 - 550



calc (src & "XX"), last - 20, last
calc (src & "V"), last - 50, last
calc src, courant, last
calc (src & "C"), last - 100, last
calc (src & "CV"), borneMCV, last
calc (src & "2C"), borneP20 - 220, last
calc (src & "5C"), borneM5C, last
calc (src & "M5C"), borneP100 - 1600, last
'calc "c5M", borneP100 - 5100, last
calc (src & "5M"), last - 5000, last


    
 
End Sub

Sub calc(ByVal sheet As String, ByVal borneM As Integer, ByVal borneP As Integer)
    On Error GoTo errorHandler
    If borneM < 2 Then borneM = 2
    'Sheets(sheet).Select
    
    setBorne 1, "A", borneM, borneP, sheet
   
    setBorne 2, "K", borneM, borneP, sheet
    setBorne 3, "H", borneM, borneP, sheet
    setBorne 4, "G", borneM, borneP, sheet
     setBorne 5, "D", borneM, borneP, sheet
    
    setBorneX 1, borneM, sheet
    setBorneX 2, borneM, sheet
    
    setBorneY 1, 0, 0, borneM, borneP, sheet, False
    setBorneY 4, 8, 7, borneM, borneP, sheet, True
    
errorHandler:

End Sub


Sub setBorne(ByVal index As Integer, ByVal col As String, ByVal borneM As Integer, ByVal borneP As Integer, ByVal sheet As String)

Sheets(sheet).SeriesCollection(index).Values = "=" + source + "!$" + col + "$" + CStr(borneM) + ":$" + col + "$" + CStr(borneP)

End Sub

Sub setBorneX(ByVal index As Integer, ByVal borneM As Integer, ByVal sheet As String)

Sheets(sheet).SeriesCollection(index).XValues = "=" + source + "!$J$" + CStr(borneM) + ":$J$10000"

End Sub

Sub setBorneY(ByVal col As Integer, ByVal col2 As Integer, ByVal col3 As Integer, ByVal borneM As Integer, ByVal borneP As Integer, ByVal sheet As String, ByVal secondAxe As Boolean)
Min = Sheets(source).Cells(borneM, col)
Max = Min

For i = borneM To borneP
    y = Sheets(source).Cells(i, col)
    y2 = y
    y3 = y
    If col2 > 0 Then y2 = Sheets(source).Cells(i, col2)
    If col3 > 0 Then y3 = Sheets(source).Cells(i, col3)
    If y > Max Then
            Max = y
        Else:
            If y < Min Then
                Min = y
        End If
    End If
    If y2 > Max Then
            Max = y2
        Else:
            If y2 > 0 And y2 < Min Then
            Min = y2
        End If
    
    End If
    If y3 > Max Then
            Max = y3
        Else:
            If y3 > 0 And y3 < Min Then
            Min = y3
        End If
    
    End If
    
Next

If Min = Max Then GoTo Ex
Delta = (Max - Min) / Sheets(source).Cells(1, 17)
coeff = 1
While Delta < 1
    Delta = Delta * 10
    coeff = 10 * coeff
Wend

While Delta > 10
    Delta = Delta / 10
    coeff = 0.1 * coeff
Wend

'1.235
If Delta > 5 Then
    Delta = 10
Else:
    If Delta > 2 Then
    Delta = 5
Else:
    Delta = 2
End If
End If
minv = Int(coeff * Min)
maxv = Int(coeff * Max) + 1

minv = Int(minv / Delta) * Delta

courant = minv
While courant < maxv
courant = courant + Delta
Wend

borneMin = minv / coeff
borneMax = courant / coeff

If secondAxe Then
Sheets(sheet).Axes(xlValue, xlSecondary).MinimumScale = borneMin
Sheets(sheet).Axes(xlValue, xlSecondary).MaximumScale = borneMax
Sheets(sheet).Axes(xlValue, xlSecondary).MajorUnit = Delta / coeff
Else

Sheets(sheet).Axes(xlValue).MinimumScale = borneMin
Sheets(sheet).Axes(xlValue).MaximumScale = borneMax
Sheets(sheet).Axes(xlValue).MajorUnit = Delta / coeff
End If

Ex:
End Sub

Sub writefile(ByVal content As String)
Dim fso As Object
Set fso = CreateObject("Scripting.FileSystemObject")
Dim oFile As Object
Set oFile = fso.CreateTextFile("C:\Bernard\db1\PieceDb3Ref\pdb.player\busyExcel.txt")
oFile.WriteLine content
oFile.Close
Set fso = Nothing
Set oFile = Nothing

End Sub

                    
Sub refreshDyn()
'
' refreshDyn Macro
'
' Touche de raccourci du clavier: Ctrl+q

   ActiveWorkbook.Connections("un").refresh
   ActiveWorkbook.Connections("deux").refresh
'
End Sub
