<db path="C:\Bernard\db1\pdb4">
  <file path="\pdb.sln">
    <content><![CDATA[
Microsoft Visual Studio Solution File, Format Version 11.00
# Visual Studio 2010
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb", "pdb.csproj", "{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.it", "pieceDb.iT\pdb.it.csproj", "{CF5DB63F-4790-4351-9050-B30DED32F052}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.obj", "PieceDb.obj\pdb.obj.csproj", "{9B849072-2B8E-4CE4-8AD7-D173724A9644}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.db", "PieceDb.Db\pdb.db.csproj", "{43D27B47-E615-451D-AD25-67C5B8447C4A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.gen", "PieceDb.Consolid\pdb.gen.csproj", "{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.gen.it", "PieceDb.iT.listGen\pdb.gen.it.csproj", "{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testMoveTree", "testMoveTree\testMoveTree.csproj", "{FF82B72D-A119-4B53-9D35-2269FF6E5384}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "podcast", "podcast\podcast.csproj", "{CF22411A-0D1B-4301-9087-DFBCF85AB16A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.util", "pdb.util\pdb.util.csproj", "{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "hello", "WPF\hello\hello.csproj", "{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.podcast", "pdb.podcast\pdb.podcast.csproj", "{6503C759-0373-4B68-A28B-1CB5FF0E6208}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "grant", "grant\grant.csproj", "{5E84FD2F-0954-4D9B-AF17-36F857490C6A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testSDK", "testSDK\testSDK.csproj", "{30459276-DDC7-4BF5-AF55-CDD7211FD791}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "purgeZique", "purgeZique\purgeZique.csproj", "{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.daemon", "pdb.daemon\pdb.daemon.csproj", "{D69D572F-67C8-47E8-93B0-CC33FA4BC704}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "podcastCopy", "podcastCopy\podcastCopy.csproj", "{F916911A-B4FF-4B0A-BA80-B8349E3E0130}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testFormar", "testFormar\testFormar.csproj", "{32A79657-7A1F-4F72-99D8-4406838182F2}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.ordo", "pdb.ordo\pdb.ordo.csproj", "{30823D1D-851C-456B-AC4C-B0BEEC173361}"
EndProject
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "engine", "engine", "{B35DF70C-1EC8-445D-939E-02FFE4A5B8B1}"
EndProject
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "vlc", "vlc", "{C7DF1F85-A6D6-4771-8870-2CC0F2A0041E}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player.engine", "engine\pdb.player.engine\pdb.player.engine.csproj", "{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player.engine.build", "engine\pdb.player.engine.build\pdb.player.engine.build.csproj", "{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player.engine.vlc.pluginI", "engine\vlc\pdb.player.engine.vlc.pluginI\pdb.player.engine.vlc.pluginI.csproj", "{610EF011-6738-49D6-8426-4B162726D57E}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player.engine.vlc.plugin", "engine\vlc\pdb.player.engine.vlc.plugin\pdb.player.engine.vlc.plugin.csproj", "{3CD9378E-BE8C-4E38-B362-51363357988C}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testStats", "testStats\testStats.csproj", "{07095C40-49A3-4001-8671-4285D9633596}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "2001", "2001\2001.csproj", "{37020161-0E95-46F0-9FD1-DE43C491FA08}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player", "pdb.player\pdb.player.csproj", "{4166FA60-B33F-4496-9352-EDD8F3214021}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testmatchalbum", "..\testmatchalbum\testmatchalbum.csproj", "{B901D21E-A546-4628-9136-B8D5E3FF4A1A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.player.engine.mp", "engine\pdb.player.engine.mp\pdb.player.engine.mp.csproj", "{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Debug|Mixed Platforms = Debug|Mixed Platforms
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|Any CPU = Release|Any CPU
		Release|Mixed Platforms = Release|Mixed Platforms
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|x64.ActiveCfg = Debug|x64
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|x64.Build.0 = Debug|x64
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|x86.ActiveCfg = Debug|x86
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Debug|x86.Build.0 = Debug|x86
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|Any CPU.Build.0 = Release|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|x64.ActiveCfg = Release|x64
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|x64.Build.0 = Release|x64
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|x86.ActiveCfg = Release|x86
		{45D9BDC7-909F-47D5-952A-7C78B69D4BE6}.Release|x86.Build.0 = Release|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|x64.ActiveCfg = Debug|x64
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|x64.Build.0 = Debug|x64
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|x86.ActiveCfg = Debug|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Debug|x86.Build.0 = Debug|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|Any CPU.Build.0 = Release|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|x64.ActiveCfg = Release|x64
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|x64.Build.0 = Release|x64
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|x86.ActiveCfg = Release|x86
		{CF5DB63F-4790-4351-9050-B30DED32F052}.Release|x86.Build.0 = Release|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|x64.ActiveCfg = Debug|x64
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|x64.Build.0 = Debug|x64
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|x86.ActiveCfg = Debug|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Debug|x86.Build.0 = Debug|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|Any CPU.Build.0 = Release|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|x64.ActiveCfg = Release|x64
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|x64.Build.0 = Release|x64
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|x86.ActiveCfg = Release|x86
		{9B849072-2B8E-4CE4-8AD7-D173724A9644}.Release|x86.Build.0 = Release|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|x64.ActiveCfg = Debug|x64
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|x64.Build.0 = Debug|x64
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|x86.ActiveCfg = Debug|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Debug|x86.Build.0 = Debug|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|Any CPU.Build.0 = Release|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|x64.ActiveCfg = Release|x64
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|x64.Build.0 = Release|x64
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|x86.ActiveCfg = Release|x86
		{43D27B47-E615-451D-AD25-67C5B8447C4A}.Release|x86.Build.0 = Release|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|x64.ActiveCfg = Debug|x64
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|x64.Build.0 = Debug|x64
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|x86.ActiveCfg = Debug|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Debug|x86.Build.0 = Debug|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|Any CPU.Build.0 = Release|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|x64.ActiveCfg = Release|x64
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|x64.Build.0 = Release|x64
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|x86.ActiveCfg = Release|x86
		{DFC524F3-50BB-40E3-BAC0-CA56950BBB5A}.Release|x86.Build.0 = Release|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|x64.ActiveCfg = Debug|x64
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|x64.Build.0 = Debug|x64
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|x86.ActiveCfg = Debug|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Debug|x86.Build.0 = Debug|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|Any CPU.Build.0 = Release|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|x64.ActiveCfg = Release|x64
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|x64.Build.0 = Release|x64
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|x86.ActiveCfg = Release|x86
		{76351375-3BAA-4E37-A88E-AD7E7AE6F84B}.Release|x86.Build.0 = Release|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Debug|Any CPU.ActiveCfg = Debug|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Debug|x64.ActiveCfg = Debug|x64
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Debug|x86.ActiveCfg = Debug|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Debug|x86.Build.0 = Debug|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Release|Any CPU.ActiveCfg = Release|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Release|Mixed Platforms.Build.0 = Release|x86
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Release|x64.ActiveCfg = Release|x64
		{FF82B72D-A119-4B53-9D35-2269FF6E5384}.Release|x86.ActiveCfg = Release|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|Any CPU.ActiveCfg = Debug|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|Mixed Platforms.ActiveCfg = Debug|x64
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|Mixed Platforms.Build.0 = Debug|x64
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|x64.ActiveCfg = Debug|x64
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|x86.ActiveCfg = Debug|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Debug|x86.Build.0 = Debug|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Release|Any CPU.ActiveCfg = Release|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Release|Mixed Platforms.Build.0 = Release|x86
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Release|x64.ActiveCfg = Release|x64
		{CF22411A-0D1B-4301-9087-DFBCF85AB16A}.Release|x86.ActiveCfg = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x64.ActiveCfg = Debug|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x64.Build.0 = Debug|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x86.ActiveCfg = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x86.Build.0 = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Any CPU.Build.0 = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x64.ActiveCfg = Release|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x64.Build.0 = Release|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x86.ActiveCfg = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x86.Build.0 = Release|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Debug|Any CPU.ActiveCfg = Debug|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Debug|x64.ActiveCfg = Debug|x64
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Debug|x86.ActiveCfg = Debug|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Debug|x86.Build.0 = Debug|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|Any CPU.ActiveCfg = Release|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|Mixed Platforms.Build.0 = Release|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|x64.ActiveCfg = Release|x64
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|x86.ActiveCfg = Release|x86
		{5D58E88B-67FC-4CCC-B8CA-3F93EAC0032E}.Release|x86.Build.0 = Release|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|x64.ActiveCfg = Debug|x64
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|x64.Build.0 = Debug|x64
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|x86.ActiveCfg = Debug|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Debug|x86.Build.0 = Debug|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|Any CPU.ActiveCfg = Release|x64
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|Mixed Platforms.Build.0 = Release|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|x64.ActiveCfg = Release|x64
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|x64.Build.0 = Release|x64
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|x86.ActiveCfg = Release|x86
		{6503C759-0373-4B68-A28B-1CB5FF0E6208}.Release|x86.Build.0 = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|Any CPU.ActiveCfg = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|x64.ActiveCfg = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|x86.ActiveCfg = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Debug|x86.Build.0 = Debug|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|Any CPU.ActiveCfg = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|Mixed Platforms.Build.0 = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|x64.ActiveCfg = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|x86.ActiveCfg = Release|x86
		{5E84FD2F-0954-4D9B-AF17-36F857490C6A}.Release|x86.Build.0 = Release|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Debug|Any CPU.ActiveCfg = Debug|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Debug|x64.ActiveCfg = Debug|x64
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Debug|x86.ActiveCfg = Debug|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Debug|x86.Build.0 = Debug|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Release|Any CPU.ActiveCfg = Release|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Release|Mixed Platforms.Build.0 = Release|x86
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Release|x64.ActiveCfg = Release|x64
		{30459276-DDC7-4BF5-AF55-CDD7211FD791}.Release|x86.ActiveCfg = Release|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Debug|Any CPU.ActiveCfg = Debug|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Debug|Mixed Platforms.ActiveCfg = Debug|x64
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Debug|x64.ActiveCfg = Debug|x64
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Debug|x86.ActiveCfg = Debug|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Debug|x86.Build.0 = Debug|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Release|Any CPU.ActiveCfg = Release|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Release|Mixed Platforms.Build.0 = Release|x86
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Release|x64.ActiveCfg = Release|x64
		{7DFF4E0E-5A4D-4588-B015-D16F19DACFC0}.Release|x86.ActiveCfg = Release|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|x64.ActiveCfg = Debug|x64
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|x86.ActiveCfg = Debug|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Debug|x86.Build.0 = Debug|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|Mixed Platforms.Build.0 = Release|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|x64.ActiveCfg = Release|x64
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|x64.Build.0 = Release|x64
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|x86.ActiveCfg = Release|x86
		{D69D572F-67C8-47E8-93B0-CC33FA4BC704}.Release|x86.Build.0 = Release|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|Any CPU.ActiveCfg = Debug|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|Mixed Platforms.ActiveCfg = Debug|x64
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|Mixed Platforms.Build.0 = Debug|x64
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|x64.ActiveCfg = Debug|x64
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|x86.ActiveCfg = Debug|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Debug|x86.Build.0 = Debug|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Release|Any CPU.ActiveCfg = Release|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Release|Mixed Platforms.Build.0 = Release|x86
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Release|x64.ActiveCfg = Release|x64
		{F916911A-B4FF-4B0A-BA80-B8349E3E0130}.Release|x86.ActiveCfg = Release|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Debug|Any CPU.ActiveCfg = Debug|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Debug|Mixed Platforms.ActiveCfg = Debug|x64
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Debug|x64.ActiveCfg = Debug|x64
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Debug|x86.ActiveCfg = Debug|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Debug|x86.Build.0 = Debug|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Release|Any CPU.ActiveCfg = Release|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Release|Mixed Platforms.Build.0 = Release|x86
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Release|x64.ActiveCfg = Release|x64
		{32A79657-7A1F-4F72-99D8-4406838182F2}.Release|x86.ActiveCfg = Release|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|x64.ActiveCfg = Debug|x64
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|x64.Build.0 = Debug|x64
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|x86.ActiveCfg = Debug|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Debug|x86.Build.0 = Debug|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|Any CPU.Build.0 = Release|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|x64.ActiveCfg = Release|x64
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|x64.Build.0 = Release|x64
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|x86.ActiveCfg = Release|x86
		{30823D1D-851C-456B-AC4C-B0BEEC173361}.Release|x86.Build.0 = Release|x86
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|x64.ActiveCfg = Debug|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Debug|x86.ActiveCfg = Debug|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|Any CPU.Build.0 = Release|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|x64.ActiveCfg = Release|Any CPU
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}.Release|x86.ActiveCfg = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|x64.ActiveCfg = Debug|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Debug|x86.ActiveCfg = Debug|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|Any CPU.Build.0 = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|x64.ActiveCfg = Release|Any CPU
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54}.Release|x86.ActiveCfg = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|x64.ActiveCfg = Debug|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Debug|x86.ActiveCfg = Debug|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|Any CPU.Build.0 = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|x64.ActiveCfg = Release|Any CPU
		{610EF011-6738-49D6-8426-4B162726D57E}.Release|x86.ActiveCfg = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|x64.ActiveCfg = Debug|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|x86.ActiveCfg = Debug|x86
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Debug|x86.Build.0 = Debug|x86
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|Any CPU.Build.0 = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|x64.ActiveCfg = Release|Any CPU
		{3CD9378E-BE8C-4E38-B362-51363357988C}.Release|x86.ActiveCfg = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|x64.ActiveCfg = Debug|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Debug|x86.ActiveCfg = Debug|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|Any CPU.Build.0 = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|x64.ActiveCfg = Release|Any CPU
		{07095C40-49A3-4001-8671-4285D9633596}.Release|x86.ActiveCfg = Release|Any CPU
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|Any CPU.ActiveCfg = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|x64.ActiveCfg = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|x86.ActiveCfg = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Debug|x86.Build.0 = Debug|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|Any CPU.ActiveCfg = Release|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|Mixed Platforms.Build.0 = Release|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|x64.ActiveCfg = Release|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|x86.ActiveCfg = Release|x86
		{37020161-0E95-46F0-9FD1-DE43C491FA08}.Release|x86.Build.0 = Release|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|x64.ActiveCfg = Debug|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|x86.ActiveCfg = Debug|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Debug|x86.Build.0 = Debug|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|Any CPU.Build.0 = Release|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|x64.ActiveCfg = Release|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|x86.ActiveCfg = Release|x86
		{4166FA60-B33F-4496-9352-EDD8F3214021}.Release|x86.Build.0 = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|Any CPU.ActiveCfg = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|x64.ActiveCfg = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|x86.ActiveCfg = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Debug|x86.Build.0 = Debug|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|Any CPU.ActiveCfg = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|Mixed Platforms.Build.0 = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|x64.ActiveCfg = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|x86.ActiveCfg = Release|x86
		{B901D21E-A546-4628-9136-B8D5E3FF4A1A}.Release|x86.Build.0 = Release|x86
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|x64.ActiveCfg = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Debug|x86.ActiveCfg = Debug|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|Any CPU.Build.0 = Release|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|x64.ActiveCfg = Release|Any CPU
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}.Release|x86.ActiveCfg = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{C7DF1F85-A6D6-4771-8870-2CC0F2A0041E} = {B35DF70C-1EC8-445D-939E-02FFE4A5B8B1}
		{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D} = {B35DF70C-1EC8-445D-939E-02FFE4A5B8B1}
		{0F3BC2CF-E69D-4019-B6EA-A4B50A7FEB54} = {B35DF70C-1EC8-445D-939E-02FFE4A5B8B1}
		{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154} = {B35DF70C-1EC8-445D-939E-02FFE4A5B8B1}
		{610EF011-6738-49D6-8426-4B162726D57E} = {C7DF1F85-A6D6-4771-8870-2CC0F2A0041E}
		{3CD9378E-BE8C-4E38-B362-51363357988C} = {C7DF1F85-A6D6-4771-8870-2CC0F2A0041E}
	EndGlobalSection
EndGlobal
]]></content>
  </file>
  <file path="\engine\pdb.player.engine.build\PlayerBuilder.cs">
    <content><![CDATA[using pdb.player.engine.vlc.pluginI;
using pdb.player.engine.mp;

namespace pdb.player.engine.build
{
    public class PlayerBuilder
    {
        private static IPlayerEngine player;
        private static IPlayerEngineList playerList; 
        public static IPlayerEngine create(string type)
        {
            if (player == null)
                player = new VlcWrapper(); // MpWrapper(); // new VlcWrapper();
            return player;
        }

        //public static IPlayerEngineList createEngineList(string type)
        //{
        //    if (playerList == null)
        //        playerList = new VlcWrapperList();
        //    return playerList;
        //}

        public static IPlayerEngine Player { get { return player; } }
        public static IPlayerEngineList PlayerList { get { return playerList; } }
    }
}
]]></content>
  </file>
  <file path="\engine\pdb.player.engine.mp\MpWrapper.cs">
    <content><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using pdb.util;

namespace pdb.player.engine.mp
{
    /// <summary>
    /// etats possibles du composant WMP
    /// </summary>
    public enum MpState
    {
        Undefined = 0,
        Stopped = 1,
        Paused = 2,
        Playing = 3,
        ScanForward = 4,
        ScanReverse = 5,
        Buffering = 6,
        Waiting = 7,
        MediaEnded = 8,
        Transitioning = 9,
        Ready = 10,
        Reconnecting = 11
    }

    /// <summary>
    /// Wrapper du composant WMP
    /// </summary>
    public class MpWrapper : IPlayerEngine
    {
        //  private WMLSS.WindowsMediaLibrarySharingServices plugin; 
        private WMPLib.WindowsMediaPlayer cmp;
        private Logger logger;
        string location;
        public MpWrapper()
        {

            this.cmp = new WMPLib.WindowsMediaPlayer();
            cmp.PlayStateChange += new WMPLib._WMPOCXEvents_PlayStateChangeEventHandler(cmp_PlayStateChange);
            logger = Logger.getLogger("mp");
        }

        void cmp_PlayStateChange(int NewState)
        {
            var state = (MpState)NewState;
            log(state.ToString());
            if (state ==  MpState.MediaEnded)
            {
                cmp.controls.stop();
                log("vlc_MediaPlayerEndReached");
                if (mediaEndReached != null)
                    mediaEndReached(this, EventArgs.Empty);
            }
        }
        private void log(string txt)
        {
            logger.log(txt);
            misc.log(txt);
        }
        public TimeSpan Duration
        {
            get
            {
                var input = cmp.currentMedia;
                if (input == null)
                    return new TimeSpan();
                return TimeSpan.FromSeconds(input.duration);
            }
        }

        public TimeSpan Elapsed
        {
            get
            {
                var input = cmp.currentMedia;
                if (input == null)
                    return new TimeSpan();
                var dur = cmp.controls.currentPosition; ; //input.duration -
                return TimeSpan.FromSeconds(dur);
            }
        }

        public event EventHandler mediaEndReached;

        public void pause()
        {
            cmp.controls.pause();
        }

        public void play(string location, bool reload)
        {
            if (reload || location != this.location)
            {
                this.location = location;

                if (this.cmp != null)
                    this.cmp.PlayStateChange -= cmp_PlayStateChange;
                this.cmp = new WMPLib.WindowsMediaPlayer();
                cmp.PlayStateChange += new WMPLib._WMPOCXEvents_PlayStateChangeEventHandler(cmp_PlayStateChange);
                cmp.URL = location; // new Uri(location).AbsoluteUri;
            }
            // else
            cmp.controls.play();
        }
        public double Position
        {
            get
            {
                var input = cmp.currentMedia;
                if (input == null)
                    return 0;
                return cmp.controls.currentPosition / input.duration;
            }

            set
            {
                var input = cmp.currentMedia;
                if (input == null)
                    return;
                cmp.controls.currentPosition = value * input.duration;
            }
        }

        public void stop()
        {
            cmp.controls.stop();
        }

        public double Volume
        {
            set
            {
                try
                {
                    cmp.settings.volume = (int)(100.0 * value);
                }
                catch { }
            }

            get
            {
                return cmp.settings.volume / 100.0;
            }
        }

        private playerstate state = playerstate.stop;
        public playerstate State
        {
            get { return state; }
        }

        public void load(obj.ITrackMetaData track)
        {
            throw new NotImplementedException();
        }

        public void getDuration(obj.ITrackMetaData track)
        {
            throw new NotImplementedException();
        }
    }
}
]]></content>
  </file>
  <file path="\engine\pdb.player.engine.mp\pdb.player.engine.mp.csproj">
    <content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6C7E1DD-5BB8-414E-AAD8-11758AE0A154}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>pdb.player.engine.mp</RootNamespace>
    <AssemblyName>pdb.player.engine.mp</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="MpWrapper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="WMLSS">
      <Guid>{C21E9CE5-B317-463B-A1B1-B5E36EED59D0}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>0</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>tlbimp</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="WMPLib">
      <Guid>{6BF52A50-394A-11D3-B153-00C04F79FAA6}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>0</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>tlbimp</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\pdb.player.engine\pdb.player.engine.csproj">
      <Project>{778B94A9-80ED-4440-9AC3-7E6E6F4AD49D}</Project>
      <Name>pdb.player.engine</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\pdb.util\pdb.util.csproj">
      <Project>{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}</Project>
      <Name>pdb.util</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\PieceDb.obj\pdb.obj.csproj">
      <Project>{9B849072-2B8E-4CE4-8AD7-D173724A9644}</Project>
      <Name>pdb.obj</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>]]></content>
  </file>
  <file path="\engine\pdb.player.engine.mp\Properties\AssemblyInfo.cs">
    <content><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("pdb.player.engine.mp")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("NATIXIS")]
[assembly: AssemblyProduct("pdb.player.engine.mp")]
[assembly: AssemblyCopyright("Copyright © NATIXIS 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("cc96075a-6eb7-40aa-acd3-b8f26dd82032")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]
]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\VlcWrapper.cs">
    <content><![CDATA[using AXVLC;
using pdb.util;
using System;
using pdb.obj;
using System.Threading;
using System.Text.RegularExpressions;
using System.IO;
using System.Globalization;

namespace pdb.player.engine.vlc.pluginI
{
    public class VlcWrapper : IPlayerEngine
    {

        private Logger logger;
#if NONI
        private VLCPlugin2Class vlc;
        Equalization eq = Equalization.Instance; 
#else
        private VLCPlugin2 vlc;
#endif
        public event EventHandler mediaEndReached;
        // public static VlcWrapper Instance = new VlcWrapper();
        public VlcWrapper()
        {
            logger = Logger.getLogger("vlc");
            try
            {
#if NONI
          vlc = new VLCPlugin2Class();
     //     vlc.setVariable(Equalization.VARGAIN, eq.getVarGain());
     //     vlc.setVariable(Equalization.VARFREQ, eq.getVarFreq()); 
                
#else
                vlc = new VLCPlugin2();
                vlc.volume = 100; 


#endif
            }
            catch (Exception e)
            {
                logger.log("impossible de récupérer vlc " + e.ToString());
            }

            catch
            {
            }

#if NONI
            vlc.DVLCEvents_Event_pause += vlc_DVLCEvents_Event_pause;
            vlc.DVLCEvents_Event_play += vlc_DVLCEvents_Event_play;
            vlc.DVLCEvents_Event_stop += vlc_DVLCEvents_Event_stop;
            
#else
            vlc.MediaPlayerEncounteredError += vlc_MediaPlayerEncounteredError;
            vlc.MediaPlayerEndReached += vlc_MediaPlayerEndReached;
            vlc.MediaPlayerPaused += vlc_pause; //  new DVLCEvents_pauseEventHandler(vlc_pause);
            vlc.AutoLoop = false;
            vlc.AutoPlay = false;

#endif
        }

        void vlc_pause()
        {
            log("vlc_pause");
        }

        #region event
        void vlc_MediaPlayerEndReached()
        {
            vlc.playlist.stop();
            log("vlc_MediaPlayerEndReached");
            if (mediaEndReached != null)
                mediaEndReached(this, EventArgs.Empty);
        }

        void vlc_MediaPlayerEncounteredError()
        {
            log("vlc_DVLCEvents_Event_stop");
        }

        void vlc_DVLCEvents_Event_stop()
        {
            log("vlc_DVLCEvents_Event_stop");
        }

        void vlc_DVLCEvents_Event_play()
        {
            log("vlc_DVLCEvents_Event_play");
        }

        void vlc_DVLCEvents_Event_pause()
        {
            log("vlc_DVLCEvents_Event_pause");
        }

        private void log(string txt)
        {
            logger.log(txt);
        }
        #endregion

        #region commande
        string location;
        int currentItem;
        public void play(string location, bool reload)
        {
            try
            {
                if (reload || location != this.location)
                {
                    this.location = location;
#if NONI
                vlc.playlistClear();
                vlc.addTarget(new Uri(location).AbsoluteUri, null, VLCPlaylistMode.VLCPlayListReplaceAndGo, 0);
#else
                    try
                    {
                        vlc.playlist.items.clear();
                    }
                    catch (Exception ex)
                    {
                        misc.log(ex);
                    }
                    currentItem = vlc.playlist.add(new Uri(location).AbsoluteUri);
                    vlc.playlist.playItem(currentItem);
#endif
                }
                else
                    vlc.playlist.play();


#if NONI
            vlc.play();
#else
            }
            catch (Exception ex)
            {
                misc.log("impossible de lire " + location + " " + ex); 
            }

#endif
        }

        public void pause()
        {
#if NONI
            vlc.pause();
#else
            vlc.playlist.pause();
#endif
        }

        public void stop()
        {
#if NONI
            vlc.stop();
#else
            vlc.playlist.stop();
#endif
        }

        public TimeSpan Duration
        {
            get
            {
                var input = vlc.input;
                if (input == null)
                    return new TimeSpan();
                return TimeSpan.FromMilliseconds(input.length);
            }
        }
        public TimeSpan getDurationOrThrow()
        {
            var l = vlc.input.length;
            if (l < 100)
                throw new ApplicationException("trop court");

            return TimeSpan.FromMilliseconds(l);
        }

        public TimeSpan Elapsed
        {
            get
            {
                var input = vlc.input;
                if (input == null)
                    return new TimeSpan();
                return TimeSpan.FromMilliseconds(input.time);
            }
        }

        public double Position
        {
            get
            {

                var input = vlc.input;
                if (input == null)
                    return 0;
                return input.position;
            }

            set
            {
                var input = vlc.input;
                if (input == null)
                    return;
                input.position = value;
            }
        }

        public double Volume
        {
            set
            {
                try
                {
                    vlc.volume = (int)(200.0 * value);
                }
                catch { }
            }

            get
            {
                return vlc.volume / 200.0; 
            }
        }

        #endregion

        #region equalizer
        #endregion





        private playerstate state = playerstate.stop;
        public playerstate State
        {
            get { return state; }
        }

        private void insist(string phase, Action action)
        {
            DateTime end = DateTime.Now.AddSeconds(1);
            int nb = 1; 
            while (true)
            {
                //vlc.volume = 0;
                //vlc.playlist.play();
                try
                {
                    action();
                    return;
                }
                catch (Exception ex)
                {
                    misc.log(ex.Message + " " + nb + " " + phase);
                    Thread.Sleep(100);
                    if (DateTime.Now > end)
                    {
                        misc.log("abandon " + phase);
                        return;
                    }

                    // vlc.volume = 0;
                    //vlc.playlist.items.clear();
                    //currentItem = vlc.playlist.add(new Uri(location).AbsoluteUri);
                    //vlc.playlist.playItem(currentItem);
                    Thread.Sleep(100 * nb);
                    nb++; 
                }
            }
        }

        public void getDuration(ITrackMetaData track)
        {
            int vol = vlc.volume;
            try
            {
                vlc.playlist.items.clear();
                location = track.Location;
                currentItem = vlc.playlist.add(new Uri(location).AbsoluteUri);
               // vlc.volume = 0;
                vlc.playlist.play();

                //while (!vlc.playlist.isPlaying)
                //    Thread.Sleep(100);
                // vlc.playlist.pause();


                //vlc.playlist.play();
                //vlc.volume = 0;

                insist("Duration", () => track.Duration = getDurationOrThrow());



            }

            finally
            {
                vlc.playlist.stop();
                vlc.volume = vol;
            }
        }


        public void load(ITrackMetaData track)
        {
            int vol = vlc.volume;
            var cur = currentItem;
            var oldLocation = this.location;
            try
            {
                vlc.playlist.items.clear();

                //vlc.volume = 0;
                this.location = track.Location;
                currentItem = vlc.playlist.add(new Uri(location).AbsoluteUri);
                vlc.playlist.playItem(currentItem);

                while (!vlc.playlist.isPlaying)
                    Thread.Sleep(100);
                // vlc.playlist.pause();


                //  vlc.playlist.play();
                // vlc.volume = 0;

                insist("Duration", () => track.Duration = getDurationOrThrow());

                if (string.IsNullOrEmpty(track.Album))
                {
                    insist("Album", () =>
                        {
                            var album = vlc.mediaDescription.album;
                            if (album != null)
                            {
                                track.Album = album;

                            }

                        });
                }
                if (string.IsNullOrEmpty(track.Artist))
                    insist("Artist", () => track.Artist = vlc.mediaDescription.artist);

                if (string.IsNullOrEmpty(track.Name))
                    insist("Name", () => track.Name = vlc.mediaDescription.title);
                if (track.TrackNumber <= 0)
                {
                    insist("TrackNumber", () =>
                    {
                        string tn = vlc.mediaDescription.trackNumber;

                        //if (!string.IsNullOrEmpty(tn))
                        //{
                        //    try
                        //    {
                        track.TrackNumber = Convert.ToInt32(tn);
                        //    }
                        //    catch
                        //    {
                        //    }
                        //}
                    });
                }
                if (track.Year <= 0)
                {
                    insist("Year", () =>
                    {

                        string date = vlc.mediaDescription.date;
                        //DateTime dateC = DateTime.MinValue;
                        //if (!string.IsNullOrEmpty(date))
                        //{
                        //    try
                        //    {
                        track.Year = Convert.ToInt32(date);
                        //    }
                        //    catch
                        //    {
                        //    }
                        //}
                    });
                }

            }

            finally
            {
                //vlc.volume = vol;
                if (!string.IsNullOrEmpty(oldLocation))
                {
                    location = oldLocation;
                    vlc.playlist.items.clear();
                    currentItem = vlc.playlist.add(new Uri(location).AbsoluteUri);
                }
            }
        }

    }
}
]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\Debug\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\Debug\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\Debug\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\x86\Debug\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\x86\Debug\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\engine\vlc\pdb.player.engine.vlc.pluginI\obj_\x86\Debug\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs">
    <content><![CDATA[]]></content>
  </file>
  <file path="\PieceDb.Consolid\auto\CalcAuto.cs">
    <content><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using pdb.util;
using Math = pdb.util.Math;

namespace pdb.gen.auto
{
    public partial class ConfMedianneVirt : TuningBase
    {
        public bool linkconv { get { return _linkconv; } set { _linkconv = value; calcProduct(); } }

        private void calcProduct()
        {
            this.linkProduct = calcProduct(this.v, this.a);
        }

        public decimal calcProduct(decimal dcoeffp, decimal dconvergence)
        {
            var linkProduct = this.linkProduct;
            try
            {
                linkProduct = dcoeffp / dconvergence;
                // 1 0,9 -> 10
                // 0.1 0,99 
            }
            catch
            {
            }

            return linkProduct;
        }

        private void calcConv()
        {
            this.a = calcConv(this.v, this.linkProduct);
        }

        public decimal LinkProduct
        {
            get
            {
                if (linkProduct == 0m)
                    calcProduct();
                return linkProduct;
            }
            set
            {
                linkProduct = value;
                calcConv();

            }
        }

        public decimal calcConv(decimal dcoeffp, decimal linkProduct)
        {
            var dconvergence = this.a;
            try
            {
                // 1- conv = coeff / prod
                dconvergence = dcoeffp / linkProduct; //1/10
            }
            catch
            {

            }
            return dconvergence;
        }

        public void checkCoeffOld()
        {
            if (coeffOldAuto)
            {
                coeffOld = (decimal)pdb.util.Math.Pow(coeffVirt, coeffOldAutoLevel);
            }
        }

        private void verifMaxV()
        {

            var _dxmax = (coeffVirt - 1) * d0;
            var _dx = v * pas;
            if (_dx > _dxmax)
            {
                var vv = _dxmax / pas;
                misc.log("verifMaxV {0}->{1}", v.FormatE(4), vv.FormatE(4));
                v = vv;
            }
        }

        private void verifMaxA()
        {
            var _dxmax = (coeffVirt - 1) * d0;
            var _dx = 2 * a * pas * pas;

            if (_dx > _dxmax)
            {
                var aa = _dxmax / (2 * pas * pas);
                misc.log("verifMaxA {0}->{1}", a.FormatE(4), aa.FormatE(4));
                a = aa;
            }
        }

        private void verifBas()
        {
            var dx = v * pas;
            if (dx < epsilon)
            {
                //dx = epsilon;
                v = epsilon / pas;
            }

            //dx = vv * pas;
            //if (dx < epsilon)
            //{
            //    dx = epsilon;
            //    vv = epsilon / pas;
            //}

            var dv = a * pas;
            if (dv < vepsilon)
            {
                // dv = vepsilon;
                a = vepsilon / pas;

            }

            if (a < aepsilon)
                a = aepsilon;

            if (coeffVirt < 1)
                coeffVirt = 1;
        }
        private decimal _v0;
        public bool calcAuto(bool selectedByCoeff)
        {
            var coeffVirt0 = coeffVirt;
            if (coeffOldSwap)
            {
                coeffVirt = coeffOld;
            }
            var _c0 = coeffVirt;
            _v0 = v;
            // vv = v;
            var dv0 = dv;
            var _a0 = a;

            if (-_nbSameDirectionBox > serialm)
                _nbSameDirectionBox = -serialm;
            if (_nbSameDirectionBox > serialp)
                _nbSameDirectionBox = serialp;

            if (-_nbElastique > serialElastique)
                _nbElastique = -serialElastique;
            if (_nbElastique > serialElastique)
                _nbElastique = serialElastique;


            if (-_nbElastique2 > serialElastique)
                _nbElastique2 = -serialElastique;
            if (_nbElastique2 > serialElastique)
                _nbElastique2 = serialElastique;


            if (_nbAlt < 0)
                _nbAlt = 0;
            if (_nbAlt > serialAlt)
                _nbAlt = serialAlt;

            decimal ecart0 = System.Math.Max(_nbElastique,-_nbElastique2);
          
            var last = lastAutoDirection;
            var lastDelta_ = this.lastDelta;
            lastAutoDirection = selectedByCoeff;

            if (last.HasValue)
            {
                if (last != selectedByCoeff || (checkFall && selectedByCoeff))
                {
                    if (last != selectedByCoeff)
                    {
                        _nbAltHisto++;
                        _nbSameDirection = 0;
                        _nbAlt++;                        
                    }
                    else
                    {
                        _nbAltHisto = 0;
                    }

                    //if (_nbAltHisto > 1)
                    //{
                    if (selectedByCoeff)
                    {
                        _nbElastique -= rapportmp * coeffElastique1r;
                        _nbElastique2 -= rapportmp * coeffElastique2;
                    }
                    else
                    {
                        _nbElastique -= coeffElastique1r;
                        _nbElastique2 -= coeffElastique2;
                    }

                    if (last != selectedByCoeff)
                    {
                        if (_nbAltHisto > 1)
                        {
                            if (currentStaticp > 1 && coeffStaticpRetour > 1)
                            {
                                currentStaticp /= coeffStaticpRetour;
                                if (currentStaticp < 1)
                                    currentStaticp = 1;
                            }
                            if (currentStaticm > 1 && coeffStaticmRetour > 1)
                            {
                                currentStaticm /= coeffStaticmRetour;
                                if (currentStaticm < 1)
                                    currentStaticm = 1;
                            }
                        }
                    }

                    else
                    {
                        if (coeffStaticpRetour > 1 && currentStaticp > coeffStaticpRetour)
                            currentStaticp /= coeffStaticpRetour;
                        currentStaticm *= coeffStaticm;
                    }



                    // }
                    if (_nbSameDirectionBox > 0 && selectedByCoeff)
                        _nbSameDirectionBox--;
                    if (_nbSameDirectionBox < 0 && !selectedByCoeff)
                        _nbSameDirectionBox++;

                }
                else
                {
                    _nbAlt--;
                    _nbAltHisto = 0;
                  

                    if (selectedByCoeff)
                    {
                        _nbSameDirectionBox--;
                        // _nbSameDirection--;
                        _nbElastique += coeffElastique1 * rapportmp;
                        _nbElastique2 += coeffElastique2r * rapportmp;
                    }
                    else
                    {
                        _nbElastique += coeffElastique1;
                        _nbElastique2 += coeffElastique2r;
                        _nbSameDirectionBox++;
                        // _nbSameDirection++;
                    }
                }

                if (selectedByCoeff)
                {
                    _nbSameDirection--;
                }
                else
                {
                    _nbSameDirection++;
                }
            }

            if (!auto)
                return false;

            var lastProduct = linkProduct;


            var c0 = v;
            //verifHaut();
            //verifBas();


            if (last.HasValue)
            {
                var aux = a;




                lastDelta = null;
                if (last != selectedByCoeff) // if (_nbAltHisto > 1)
                {
                    if (_nbAlt > serialAlt || _nbElastique2 < -serialElastique)
                    {
                        lastDelta = false;
                    }
                }
                else if (checkFall && selectedByCoeff)
                {
                }
                else
                {
                    bool applyanti = false;

                    if (Math.Abs(_nbSameDirection) > 1)
                    {
                        //if (selectedByCoeff)
                        //{
                        //    //if (coeffStaticpRetour > 1 && currentStaticp > coeffStaticpRetour)
                        //    //    currentStaticp /= coeffStaticpRetour;
                        //    //currentStaticm *= coeffStaticm;
                        //}
                        //else
                        //{
                        //    if (coeffStaticmRetour > 1 && currentStaticm > coeffStaticmRetour)
                        //        currentStaticm /= coeffStaticmRetour;
                        //    currentStaticp *= coeffStaticp;
                        //} 
                        if (coeffStaticRetourLarge)
                        {

                            if (currentStaticm > 1)
                            {
                                currentStaticm /= coeffStaticmRetour;
                                if (currentStaticm < 1)
                                    currentStaticm = 1;
                            }

                            //if (coeffStaticmRetour > 1 && currentStaticm > coeffStaticmRetour)
                            //    currentStaticm /= coeffStaticmRetour;
                            currentStaticp *= coeffStaticp;
                        }

                        if (selectedByCoeff && -_nbSameDirectionBox > serialm)
                            applyanti = true;
                        else if (!selectedByCoeff && _nbSameDirectionBox > serialp)
                            applyanti = true;
                        else if (_nbElastique > serialElastique)
                            applyanti = true;
                        //else if (_nbElastique2 > serialElastique)
                        //    applyanti = true;
                    }
                    if (applyanti)
                        lastDelta = true;
                    else
                        lastDelta = null;
                    if (_linkconv)
                        calcConv();


                }



                bool onAugmente = lastDelta.HasValue && (lastDelta_ == null || lastDelta_ == lastDelta);
                if (onAugmente)
                {
                    a *= (1 + aa);
                    //verifHaut();
                    //verifBas();
                }
                else
                {
                    decimal ecart1 = System.Math.Max(_nbElastique, -_nbElastique2);
                    
                        
                    if (ecart1 >0 && ecart1 < ecart0)
                    {
                        if (a > aepsilon)
                        {
                            a /= (1 + aa);
                            if (a < aepsilon)
                                a = aepsilon;
                        }

                        //verifHaut();
                        //verifBas();

                    }
                }

                //if (c0 == v || !onAugmente)
                //{

                //    var ecart1 = System.Math.Max(System.Math.Abs(_nbElastique), System.Math.Abs(_nbElastique2));
                //    if (ecart1 < ecart0)
                //    {
                //        a /= (1 + aa);
                //        if (a < aepsilon)
                //            a = aepsilon;

                //    }
                //}
                //else
                //{
                //    a *= (1 + aa);
                //    verifHaut();
                //    verifBas();

                //}


                // vv += pas * a;



                verifMaxA();

                if (lastDelta.HasValue)
                {
                    //verifMaxA();
                    if (false == lastDelta)
                    {
                        var _v = _v0 - pas * a;
                        var limit = _v0 / vv;
                        if (_v < limit)
                        {
                            _v = limit;
                            a = (_v0 - _v) / pas; 
                        }
                        v = _v;

                        if (_linkconv)
                            calcConv();

                    }
                    else if (true == lastDelta)
                    {
                        var deltav = pas * a;
                        var limit = _v0 * (vv - 1);
                        var limit2 = vepsilon / pas;

                        if (limit < limit2)
                            limit = limit2;


                        if (deltav > limit)
                        {
                            deltav = limit;
                            a = deltav / pas; 
                        }

                        v = _v0 + deltav;

                    }

                    //  verifMaxV();
                    //verifHaut();
                    //verifBas();
                }


                verifMaxV();


                misc.log("convergence {0:0.##}->{1:0.######}", c0, v);
                misc.log("evol convergence {0:0.######}->{1:0.######}", aux, a);
            }

            string montee = selectedByCoeff ? "down" : "up";

            verifBas();

            if (selectedByCoeff)
                coeffVirt -= pas * v * rapportmp / currentStaticp;
            else
                coeffVirt += pas * v / currentStaticm;


            if (selectedByCoeff)
            {
                verifMaxA();
                verifMaxV();

                verifBas();
                coeffVirt = _c0 - pas * v * rapportmp / currentStaticp;
                verifBas();
            }




            //verifHaut();
            //verifBas();
            dx = Math.Abs(coeffVirt - _c0);
            if (_c0 > 0)
                dcoeff = 1 + dx / _c0;

            if (selectedByCoeff)
                dx /= rapportmp;


            dv = Math.Abs(v - _v0);
            if (dv == 0)
                dv = dv0 * (a / _a0);



            // da = Math.Abs(a - _a0);
            misc.log("{0} {1:0.### ###} {2:0.### ###}->{3:0.### ###}", montee, dx, c0, coeffVirt);


            histo.Add(new HistoValue(coeffVirt, dx, a, v / currentStaticm, dv, v));

            checkCoeffOld();

            if (coeffOldSwap)
            {
                coeffOld = coeffVirt;
                coeffVirt = coeffVirt0;
            }

            return dx != 0;
        }

    }
}
]]></content>
  </file>
</db>
