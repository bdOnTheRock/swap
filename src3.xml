<db path="C:\bernard\db2\">
  <file path="buro\buro.sln">
    <content><![CDATA[
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 14
VisualStudioVersion = 14.0.25420.1
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "buro", "buro\buro.csproj", "{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "imagedata", "imagedata\imagedata.csproj", "{5E44D4FA-0813-4635-9D0A-B1C151E9C681}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "threadDiag", "..\threadDiag\threadDiag.csproj", "{2712422E-1E04-489E-8492-961C81051379}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "imageRepertory", "imageRepertory\imageRepertory.csproj", "{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testFiles", "testFiles\testFiles.csproj", "{8982D5DA-28BD-4018-996E-E6FF267AD7BA}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "testForm", "testForm\testForm.csproj", "{9241E657-6E3A-4055-9EB7-B7190587A2ED}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "buroSimpleLib", "buroSimpleLib\buroSimpleLib.csproj", "{31EFDC42-3A43-4093-8F5B-B99BE308012D}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "buroSimpleSearch", "buroSimpleSearch\buroSimpleSearch.csproj", "{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "buroSimple", "buroSimple\buroSimple.csproj", "{5DC38A4B-74CE-4994-BD66-D56564F2924A}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "pdb.util", "..\db4\pdb.util\pdb.util.csproj", "{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Debug|Mixed Platforms = Debug|Mixed Platforms
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|Any CPU = Release|Any CPU
		Release|Mixed Platforms = Release|Mixed Platforms
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|x64.ActiveCfg = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Debug|x86.ActiveCfg = Debug|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|Any CPU.Build.0 = Release|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|x64.ActiveCfg = Release|Any CPU
		{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}.Release|x86.ActiveCfg = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|x64.ActiveCfg = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Debug|x86.ActiveCfg = Debug|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|Any CPU.Build.0 = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|x64.ActiveCfg = Release|Any CPU
		{5E44D4FA-0813-4635-9D0A-B1C151E9C681}.Release|x86.ActiveCfg = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|x64.ActiveCfg = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Debug|x86.ActiveCfg = Debug|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|Any CPU.Build.0 = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|x64.ActiveCfg = Release|Any CPU
		{2712422E-1E04-489E-8492-961C81051379}.Release|x86.ActiveCfg = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|x64.ActiveCfg = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Debug|x86.ActiveCfg = Debug|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|Any CPU.Build.0 = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|x64.ActiveCfg = Release|Any CPU
		{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}.Release|x86.ActiveCfg = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|x64.ActiveCfg = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Debug|x86.ActiveCfg = Debug|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|Any CPU.Build.0 = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|x64.ActiveCfg = Release|Any CPU
		{8982D5DA-28BD-4018-996E-E6FF267AD7BA}.Release|x86.ActiveCfg = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|x64.ActiveCfg = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Debug|x86.ActiveCfg = Debug|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|Any CPU.Build.0 = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|x64.ActiveCfg = Release|Any CPU
		{9241E657-6E3A-4055-9EB7-B7190587A2ED}.Release|x86.ActiveCfg = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|x64.ActiveCfg = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Debug|x86.ActiveCfg = Debug|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|Any CPU.Build.0 = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|Mixed Platforms.Build.0 = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|x64.ActiveCfg = Release|Any CPU
		{31EFDC42-3A43-4093-8F5B-B99BE308012D}.Release|x86.ActiveCfg = Release|Any CPU
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|Any CPU.ActiveCfg = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|x64.ActiveCfg = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|x86.ActiveCfg = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Debug|x86.Build.0 = Debug|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|Any CPU.ActiveCfg = Release|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|Mixed Platforms.Build.0 = Release|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|x64.ActiveCfg = Release|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|x86.ActiveCfg = Release|x86
		{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}.Release|x86.Build.0 = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|Any CPU.ActiveCfg = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|x64.ActiveCfg = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|x86.ActiveCfg = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Debug|x86.Build.0 = Debug|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|Any CPU.ActiveCfg = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|Mixed Platforms.Build.0 = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|x64.ActiveCfg = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|x86.ActiveCfg = Release|x86
		{5DC38A4B-74CE-4994-BD66-D56564F2924A}.Release|x86.Build.0 = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Mixed Platforms.ActiveCfg = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|Mixed Platforms.Build.0 = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x64.ActiveCfg = Debug|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x64.Build.0 = Debug|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x86.ActiveCfg = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Debug|x86.Build.0 = Debug|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Any CPU.Build.0 = Release|Any CPU
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Mixed Platforms.ActiveCfg = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|Mixed Platforms.Build.0 = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x64.ActiveCfg = Release|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x64.Build.0 = Release|x64
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x86.ActiveCfg = Release|x86
		{C2B34CA9-3BB2-464F-8691-5F5B7CB2B997}.Release|x86.Build.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal
]]></content>
  </file>
  <file path="buro\buro\buro.csproj">
    <content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.50727</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FE5B42D9-ECD9-4A8D-AF39-F42ACA07A786}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>buro</RootNamespace>
    <AssemblyName>buro</AssemblyName>
    <StartupObject>buro.Program</StartupObject>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <UpgradeBackupLocation>
    </UpgradeBackupLocation>
    <OldToolsVersion>2.0</OldToolsVersion>
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <UseApplicationTrust>false</UseApplicationTrust>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE;DEBUG;LOG_MOUSE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE;LOG</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Interop.AXVLC, Version=1.0.0.0, Culture=neutral, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <EmbedInteropTypes>True</EmbedInteropTypes>
      <HintPath>bin\Interop.AXVLC.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.configuration" />
    <Reference Include="System.Data" />
    <Reference Include="System.Deployment" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Faff.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="Faff.Designer.cs">
      <DependentUpon>Faff.cs</DependentUpon>
    </Compile>
    <Compile Include="FaffScr.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FaffScr.Designer.cs">
      <DependentUpon>FaffScr.cs</DependentUpon>
    </Compile>
    <Compile Include="FConfViewver.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FConfViewver.Designer.cs">
      <DependentUpon>FConfViewver.cs</DependentUpon>
    </Compile>
    <Compile Include="FDetect.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FDiapo.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FDiapo.Designer.cs">
      <DependentUpon>FDiapo.cs</DependentUpon>
    </Compile>
    <Compile Include="FScreenSaver.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FScreenSaver.Designer.cs">
      <DependentUpon>FScreenSaver.cs</DependentUpon>
    </Compile>
    <Compile Include="FVideoPlayer.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="FVideoPlayer.Designer.cs">
      <DependentUpon>FVideoPlayer.cs</DependentUpon>
    </Compile>
    <Compile Include="GetAndModifyImageTask.cs" />
    <Compile Include="ImageDrawer.cs" />
    <Compile Include="Interfaces.cs" />
    <Compile Include="PrepareTaskBase.cs" />
    <Compile Include="ListImageEnumerator.cs" />
    <Compile Include="ListTask.cs" />
    <Compile Include="LoopThread.cs" />
    <Compile Include="MouseRecord.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Controleur.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <EmbeddedResource Include="Faff.resx">
      <SubType>Designer</SubType>
      <DependentUpon>Faff.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FaffScr.resx">
      <SubType>Designer</SubType>
      <DependentUpon>FaffScr.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FConfViewver.resx">
      <SubType>Designer</SubType>
      <DependentUpon>FConfViewver.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FDiapo.resx">
      <SubType>Designer</SubType>
      <DependentUpon>FDiapo.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FScreenSaver.resx">
      <SubType>Designer</SubType>
      <DependentUpon>FScreenSaver.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FVideoPlayer.resx">
      <SubType>Designer</SubType>
      <DependentUpon>FVideoPlayer.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="TasksViewer.resx">
      <SubType>Designer</SubType>
      <DependentUpon>TasksViewer.cs</DependentUpon>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="app.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="RecordTempFileTask.cs" />
    <Compile Include="VideoTraitement.cs" />
    <Compile Include="WindowImageTreatment.cs" />
    <Compile Include="Sleeper.cs" />
    <Compile Include="TaskLauncher.cs" />
    <Compile Include="TasksViewer.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="TasksViewer.Designer.cs">
      <DependentUpon>TasksViewer.cs</DependentUpon>
    </Compile>
    <Compile Include="VideoPlayer.cs" />
    <Compile Include="VlcDummy.cs" />
    <Compile Include="WinAPI.cs" />
    <Compile Include="WprTreatment.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\imagedata\imagedata.csproj">
      <Project>{5E44D4FA-0813-4635-9D0A-B1C151E9C681}</Project>
      <Name>imagedata</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\gauche.bmp" />
  </ItemGroup>
  <ItemGroup>
    <BootstrapperPackage Include="Microsoft.Net.Client.3.5">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1 Client Profile</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Windows.Installer.3.1">
      <Visible>False</Visible>
      <ProductName>Windows Installer 3.1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <PropertyGroup>
    <PostBuildEvent>rem copy $(TargetPath) C:\windows\system32\buro.scr
rem copy $(TargetDir)\imagedata.dll  C:\windows\system32\</PostBuildEvent>
  </PropertyGroup>
</Project>]]></content>
  </file>
  <file path="buro\buroSimple\Walpaper.cs">
    <content><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using buroSimpleLib;
using System.IO;
using System.Drawing;
using System.Drawing.Imaging;
using System.Threading;
using System.Diagnostics;
using System.Windows.Forms;
using Microsoft.Win32;
using System.Drawing.Drawing2D;

namespace buroSimple
{
    class Walpaper
    {
        int HAUTEUR;
        int LARGEUR;
        const string TMP_FILE = @"C:\Temp\wp.bmp";
        const string TMP_FILE1 = @"C:\Temp\wp1.bmp";
        const string INDEX_FILE = @"C:\Temp\wp.index.txt";


        public int delay = 30;
        public bool unique = false;
        private readonly IntPtr _ScreenStateNotify;
        private bool GO;
        public void go()
        {
            GO = true;


            SystemEvents.PowerModeChanged += new PowerModeChangedEventHandler(SystemEvents_PowerModeChanged);



            HAUTEUR = 1080;
            LARGEUR = 1920;
            var list = new List<FileDto>();
            using (StreamReader sr = new StreamReader(@"C:\Temp\buro1.txt"))
            {
                string line = "";
                while ((line = sr.ReadLine()) != null)
                {
                    if (string.IsNullOrEmpty(line))
                        continue;
                    var tab = line.Split(';');
                    try
                    {
                        FileDto fd = new FileDto() { Path = tab[0], Size = Convert.ToInt64(tab[1]) };
                        list.Add(fd);
                    }
                    catch
                    {
                    }

                }
            }

            list.Sort((x, y) => x.Size.CompareTo(y.Size));
            int count = list.Count;

            string path0 = "";
            int index0 = 0;
            if (File.Exists(INDEX_FILE))
            {
                path0 = File.ReadAllText(INDEX_FILE).Trim();
            }

            if (!string.IsNullOrEmpty(path0))
            {
                for (int i = 0; i < count; i++)
                {
                    if (list[i].Path == path0)
                    {
                        index0 = i;
                        break;
                    }
                }
            }

            HashSet<string> hs = new HashSet<string>();
            long size = -1;
            for (int i = index0 + 1; i < count; i++)
            {
                if (!GO)
                {
                    Thread.Sleep(1000);
                }
                FileDto f = list[i];
                Console.WriteLine(f);
                if (f.Size > size)
                {
                    hs.Clear();
                    size = f.Size;
                }
                else
                {
                    if (unique)
                        continue;
                }

                if (!hs.Add(Path.GetFileName(f.Path)))
                    continue;
                try
                {
                    createFile(f);
                    WinAPI.BmpLoad(TMP_FILE);
                    File.WriteAllText(INDEX_FILE, f.Path);
                    Thread.Sleep(delay * 1000);
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.ToString());
                }
            }
        }

        void SystemEvents_PowerModeChanged(object sender, PowerModeChangedEventArgs e)
        {
            Console.WriteLine("SystemEvents_PowerModeChanged:" + e.Mode.ToString());
            if (e.Mode == PowerModes.Resume)
                GO = true;
            else GO = false;
        }

        private void createFile(FileDto f)
        {
            Image img = Image.FromFile(f.Path);

            int largeur0 = img.Width;
            int hauteur0 = img.Height;

            Console.WriteLine("{0}x{1} {2}", largeur0, hauteur0, f.HumanReadableSize);

            double r0 = (double)HAUTEUR / (double)LARGEUR;

            int largeurTrame;
            int hauteurTrame;

            double r = (double)hauteur0 / (double)largeur0;


            Bitmap trame;


            if (r > r0)
            {
                // image pas assez large --> ajout largeur

                hauteurTrame = hauteur0;
                largeurTrame = Convert.ToInt32((double)hauteur0 / (double)r0);

            }
            else
            {
                // image trop large --> bandes en haut et en bas

                largeurTrame = largeur0;
                hauteurTrame = Convert.ToInt32((double)largeur0 * (double)r0);
            }

            trame = new Bitmap(largeurTrame, hauteurTrame);
            Graphics graphics = Graphics.FromImage(trame);

            //graphics.CompositingMode = CompositingMode.SourceCopy;
            //graphics.CompositingQuality = CompositingQuality.HighQuality;
            //graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
            //graphics.SmoothingMode = SmoothingMode.HighQuality;
            //graphics.PixelOffsetMode = PixelOffsetMode.HighQuality;

            int xrec = (largeurTrame - largeur0) / 2;
            int yrec = (hauteurTrame - hauteur0) / 2;
            Rectangle centré = new Rectangle(xrec, yrec, largeur0, hauteur0);
            graphics.DrawImage(img, centré, 0, 0, largeur0, hauteur0, GraphicsUnit.Pixel);


            trame.Save(TMP_FILE, ImageFormat.Bmp);
            trame.Dispose();
            img.Dispose();
            graphics.Dispose();

            //using (Bitmap fs = new Bitmap(LARGEUR, HAUTEUR))
            //{
            //    Image i0 = null;
            //    Image i1 = null;
            //    using (var g = Graphics.FromImage(fs))
            //    {

            //        if (File.Exists(TMP_FILE))
            //        {
            //            i0 = Image.FromFile(TMP_FILE);
            //            gr.DrawImage(i0, new Rectangle(0, 0, LARGEUR, HAUTEUR), 0, 0, LARGEUR, HAUTEUR, GraphicsUnit.Pixel);
            //        }

            //        if (File.Exists(TMP_FILE1))
            //        {
            //            i1 = Image.FromFile(TMP_FILE1);
            //            gr.DrawImage(i0, new Rectangle(0, 0, LARGEUR, HAUTEUR), 0, 0, LARGEUR, HAUTEUR, GraphicsUnit.Pixel);
            //        }
            //    }
            //    fs.Save(TMP_FILE, ImageFormat.Bmp);
            //    if (i0 != null)
            //        i0.Dispose();
            //    if (i1 != null)
            //        i1.Dispose();
            //}
        }
    }
}
]]></content>
  </file>
  <file path="buro\buroSimpleLib\buroSimpleLib.csproj">
    <content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{31EFDC42-3A43-4093-8F5B-B99BE308012D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>buroSimpleLib</RootNamespace>
    <AssemblyName>buroSimpleLib</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="FileDto.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\db4\pdb.util\pdb.util.csproj">
      <Project>{c2b34ca9-3bb2-464f-8691-5f5b7cb2b997}</Project>
      <Name>pdb.util</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>]]></content>
  </file>
  <file path="buro\buroSimpleLib\FileDto.cs">
    <content><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using pdb.util;

namespace buroSimpleLib
{
    public class FileDto
    {
        public const string PATH = @"C:\Temp\buro.txt";
        public string Path;
        public long Size;

        public override string ToString()
        {
           return string.Format("{0} {1}", Path, HumanReadableSize); 
        }

        public string HumanReadableSize
        {
            get
            {
                return FileUtil.HumanReadableSize(Size,1); 
            }
        }
    }
}
]]></content>
  </file>
  <file path="buro\buroSimpleSearch\buroSimpleSearch.csproj">
    <content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8BA2DDC4-7C07-4950-99D9-7ACB63D55637}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>buroSimpleSearch</RootNamespace>
    <AssemblyName>buroSimpleSearch</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <PlatformTarget>x86</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <PlatformTarget>x86</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.configuration" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\db4\pdb.util\pdb.util.csproj">
      <Project>{c2b34ca9-3bb2-464f-8691-5f5b7cb2b997}</Project>
      <Name>pdb.util</Name>
    </ProjectReference>
    <ProjectReference Include="..\buroSimpleLib\buroSimpleLib.csproj">
      <Project>{31EFDC42-3A43-4093-8F5B-B99BE308012D}</Project>
      <Name>buroSimpleLib</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>]]></content>
  </file>
  <file path="buro\buroSimpleSearch\Program.cs">
    <content><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using pdb.util.ordo;
using buroSimpleLib;
using System.IO;
using System.Drawing;
using System.Threading;
using pdb.util;
using System.Configuration;

namespace buroSimpleSearch
{
    class Program
    {
        static List<FileDto> list = new List<FileDto>();
        static HashSet<string> imageType = new HashSet<string> { "bmp", "gif", "ico", "jpeg", "jpg", "jpe", "png", "svg", "tif", "tiff" };
        static HashSet<string> noImageType = new HashSet<string>();

        static listCandidat imageCandidat = new listCandidat();
        static listCandidat NoImageCandidat = new listCandidat();
        static volatile object _lock = new object();

        static void Main(string[] args)
        {
            Console.CancelKeyPress += new ConsoleCancelEventHandler(Console_CancelKeyPress);
            new Program().go();
        }

        static Ordonnanceur ordo;
        static StreamWriter sw = new StreamWriter(FileDto.PATH);
        void go()
        {
            var _nbProc = ConfigurationManager.AppSettings["nbProc"];
            int nbProc = 3;
            if (!string.IsNullOrEmpty(_nbProc))
                nbProc = Convert.ToInt32(_nbProc);
            ordo = new Ordonnanceur(nbProc);

            var paths = ConfigurationManager.AppSettings["paths"];
            if (string.IsNullOrEmpty(paths))
                paths = @"C:\"; 
            var tab = paths.Split(';'); 
            foreach (string path in tab)
            {
                if (string.IsNullOrEmpty(path))
                    continue; 
                ordo.addTask(new TaskDir(ordo, new DirectoryInfo(path)));
            }
            //ordo.addTask(new TaskDir(ordo, new DirectoryInfo(@"C:\")));
            //ordo.addTask(new TaskDir(ordo, new DirectoryInfo(@"E:\")));
            //ordo.addTask(new TaskDir(ordo, new DirectoryInfo(@"I:\")));
            while (ordo.Busy)
                Thread.Sleep(30);
            sw.Dispose();
        }

        private class TaskDir : Task
        {
            private DirectoryInfo dir;
            public TaskDir(Ordonnanceur ordo, DirectoryInfo dir)
                : base(ordo)
            {
                this.dir = dir;
            }

            protected override void action()
            {
                //   ConsoleLogger.log(dir.FullName);
                List<FileDto> aux = null;
                foreach (FileInfo f in dir.GetFiles())
                {
                    // ConsoleLogger.log("check " + f.FullName);
                    FileDto fd = check(f);
                    if (fd != null)
                    {
                        ConsoleLogger.log(fd.ToString());
                        if (aux == null)
                            aux = new List<FileDto>();
                        aux.Add(fd);
                    }
                }
                if (aux != null)
                {
                    lock (_lock)
                    {
                        foreach (FileDto fd in aux)
                        {
                            sw.Write(fd.Path);
                            sw.Write(";");
                            sw.WriteLine(fd.Size);
                        }
                    }
                }
                //ConsoleLogger.log("fin " +dir.FullName);
                done = true;

                foreach (DirectoryInfo sub in dir.GetDirectories())
                {
                    ordo.addsubTask(new TaskDir(ordo, sub));
                }
            }



            public override string ToString()
            {
                return dir.FullName;
            }
        }

        private class candidat
        {
            public candidat(String ext) { this.ext = ext; }
            private String ext;
            private int note = 0;
            public void increment()
            {
                note++;
            }
            public bool Accepted { get { return note >= 10; } }
        }
        private class listCandidat
        {
            private IDictionary<String, candidat> list = new Dictionary<String, candidat>();

            public bool record(String ext)
            {
                candidat cand;
                if (!list.ContainsKey(ext))
                {
                    cand = new candidat(ext);
                    list.Add(ext, cand);
                }
                cand = list[ext];
                cand.increment();
                return cand.Accepted;
            }
        }

        static FileDto check(FileInfo f)
        {
            var file = f.FullName;
            //  Console.WriteLine(file.FullName);
            var ext = Path.GetExtension(file).ToLower().Replace(".", "");
            if (noImageType.Contains(ext)) return null;

            bool _check = false;

            Image img;
            try
            {
                img = Image.FromFile(file);
                _check = true;
                img.Dispose();
            }
            catch (Exception)
            {
                _check = false;
            }

            if (ext != null && ext.Length > 1)
            {
                if (!imageType.Contains(ext))
                {
                    Console.WriteLine("TYPE:" + ext + " " + file + " " + _check);
                    if (_check)
                    {
                        lock (imageCandidat)
                        {
                            if (imageCandidat.record(ext))
                            {
                                imageType.Add(ext);
                                Console.WriteLine("TYPE OK!!:" + ext + " " + file);
                            }
                        }

                    }
                    else
                    {
                        lock (NoImageCandidat)
                        {
                            if (NoImageCandidat.record(ext))
                            {
                                noImageType.Add(ext);
                                Console.WriteLine("TYPE NOK!!:" + ext + " " + file);
                            }
                        }
                        return null;
                    }
                }

            }
            if (_check)
            {
                try
                {

                    FileDto fdto = new FileDto() { Path = file, Size = f.Length };
                    return fdto;
                }
                catch
                {
                    return null;
                }
            }
            else
            {
                return null;
            }




        }

        static void Console_CancelKeyPress(object sender, ConsoleCancelEventArgs e)
        {

            sw.Dispose();
        }

        static void write()
        {
            using (StreamWriter sw = new StreamWriter(FileDto.PATH))
            {
                foreach (FileDto f in list)
                {
                    sw.Write(f.Path);
                    sw.Write(";");
                    sw.WriteLine(f.Size);
                }
            }
        }
    }
}
]]></content>
  </file>
  <file path="buro\imageRepertory\imageRepertory.csproj">
    <content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.50727</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4DE02EF7-185E-446A-94BA-FB0C94EC9D1B}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>imageRepertory</RootNamespace>
    <AssemblyName>imageRepertory</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <UpgradeBackupLocation>
    </UpgradeBackupLocation>
    <OldToolsVersion>2.0</OldToolsVersion>
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <UseApplicationTrust>false</UseApplicationTrust>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="BinaryComparer.cs" />
    <Compile Include="FileSystemList.cs" />
    <Compile Include="ImageComparer.cs" />
    <Compile Include="ImageCompatibiltyFInder.cs" />
    <Compile Include="ImageFinder.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\db4\pdb.util\pdb.util.csproj">
      <Project>{c2b34ca9-3bb2-464f-8691-5f5b7cb2b997}</Project>
      <Name>pdb.util</Name>
    </ProjectReference>
    <ProjectReference Include="..\imagedata\imagedata.csproj">
      <Project>{5E44D4FA-0813-4635-9D0A-B1C151E9C681}</Project>
      <Name>imagedata</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <BootstrapperPackage Include="Microsoft.Net.Client.3.5">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1 Client Profile</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Windows.Installer.3.1">
      <Visible>False</Visible>
      <ProductName>Windows Installer 3.1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>]]></content>
  </file>
</db>
